[ -e ~/.zsh_snippets/colors ]        \
    && source ~/.zsh_snippets/colors \
    && autoload -U colors            \
    && colors

[ -e ~/.zshcomplete ]     && source ~/.zshcomplete
[ -e ~/.zsh_secret ]      && source ~/.zsh_secret
[ -f ~/repos/git/j/j.sh ] && source ~/repos/git/j/j.sh
# XXX why can't -exec work with source WTF
[ -d ~/.zscripts ] &&  find ~/.zscripts -type f -name '*.zsh' | \
    while read z; do source "$z"; done

export MY_HOSTNAME=`hostname`
[ -x "$(which shell-prompt 2>/dev/null)" ] && function precmd() {
    PROMPT=`shell-prompt`
    RPROMPT=`shell-prompt right`
}

HISTSIZE=100000
SAVEHIST=100000

case "$MY_HOSTNAME" in
    dev1)
    fpath=~/.zshfunc
    ;;
esac

setopt extended_history
setopt hist_ignore_space

autoload copy-earlier-word
zle -N copy-earlier-word

autoload edit-command-line
zle -N edit-command-line

setopt nobeep               # make things in the shell not beep
setopt auto_cd              # ".." implies "cd ..", etc.
setopt multios
setopt extended_glob        # ** does recursive globbing
setopt nullglob             # don't error if glob returns nothing
setopt list_ambiguous
setopt no_nomatch
setopt interactivecomments
setopt listpacked
setopt complete_in_word     # Pressing tab on apit<cursor>de does what you want

bindkey -v

# emacs bindings
bindkey "^A" beginning-of-line
bindkey "^E" end-of-line
bindkey "^N" accept-and-infer-next-history
bindkey "^P" push-line
bindkey "^R" history-incremental-search-backward
bindkey "^Y" yank
bindkey "^T" transpose-chars

bindkey " " magic-space
bindkey "\e[3~" delete-char

# shift-tab (^[[Z) normally puts it in vi mode :(
bindkey "\e[Z" expand-or-complete

bindkey -M vicmd v edit-command-line
bindkey -M vicmd H beginning-of-line
bindkey -M vicmd L end-of-line

# if you go into vi mode and insert mode you
# normally can't do this kind of stuff
bindkey -M viins "^?" backward-delete-char
bindkey -M viins "^H" backward-delete-char
bindkey -M viins "^W" backward-delete-word
bindkey -M viins "^U" backward-kill-line
bindkey -M viins "^Y" yank

function mud() {
    rlwrap telnet "$1" 6715
}

function mem_usage {
    ps -eo size,ucmd | sort -rn | head -n$([ -z "$1" ] && echo 20 || echo $1)
}

function pubkey {
    [ -e "$HOME/.ssh/id_dsa.pub" ] || ssh-keygen -t dsa
    ssh "$1" "mkdir -p .ssh; cat - >> .ssh/authorized_keys" \
        < "$HOME/.ssh/id_dsa.pub"
}

case "$MY_HOSTNAME" in
    jinx.local)
    alias ls='gls --color=auto'
    alias sort='gsort'
    alias uniq='guniq'
    alias cp='gcp'
    alias cat='gcat'
    alias basename='gbasename'
    alias chown='gchown'
    alias chmod='gchmod'
    alias gi='sudo gem install'
    ;;

    jarsonmar|macaroni)
    alias ls='ls --color=auto'
    alias less='less -R'
    alias gi='sudo gem install'
    ;;

    *)
    alias ls='ls'
    alias less='less -R'
    ;;
esac

export ACK_COLOR_FILENAME=clear
export ACK_COLOR_MATCH=red

case "$MY_HOSTNAME" in
    jinx.local)
    alias i='sudo port -v install'
    alias s='sudo port search'
    alias v='sudo port variants'
    alias ar='sudo /opt/local/apache2/bin/apachectl restart && echo uhh success'
    ;;

    cheese)
    alias i='sudo aptitude install'
    alias s='sudo aptitude search'
    alias v='sudo aptitude variants'
    alias ar='sudo /etc/init.d/apache2 restart'
    ;;

    jarsonmar|macaroni)
    alias i='sudo pacman -S'
    function s() {
        [ -z "$1" ] || sudo pacman -Ss $1
    }
    alias ar='sudo /etc/rc.d/httpd restart'
    ;;

    dev1)
    alias s='yum search'
    alias ar='sudo /sbin/service httpd restart'
    ;;

    jobs01)
    alias ar='sudo /sbin/service httpd restart'
    ;;
esac

alias grep='grep --color=auto'


case "$MY_HOSTNAME" in
    dev1)
    GREEN="%{$fg_bold[green]%}"
    YELLOW="%{$fg_bold[yellow]%}"
    NORM="%{$reset_color%}"

    export PS1="[%n@%m ${GREEN}%~${NORM}]%# "
    ;;
esac

alias grep='grep --color=auto'
alias ll='ls -lhA'
alias mmi='make && sudo make install'
alias pmmi='perl Makefile.PL && mmi'

# only assuming EVERY tag is a CPAN release
alias downgrade-to-cpan='git reset --hard $(git describe --abbrev=0)'

alias vall='vim lib/**/*.pm'


alias cheese='ssh '"$WORK_DEV_AUTH"' -t ssh 10.1.1.81'
alias workdev="ssh $WORK_DEV_AUTH"
alias wdd="ssh $WORK_DEV_AUTH -t screen -dr dev"
alias prod="ssh $WORK_PROD_AUTH"
alias ]='gnome-open'
alias moose='perl -Moose -E'

alias d=cd
alias lsc=ls

alias ta='tmux attach -dt'
alias ts='tmux new -s'

alias tto='telnet termcast.org'

case "$MY_HOSTNAME" in
    cheese)
    alias dev1='ssh dev1'
    ;;
esac

alias sl='ls'
alias lcd='ls;cd'
for vim_typo in viim vmi bim cim vo, viom vin ivm; do alias "$vim_typo"='vim'; done

alias pi='perl -Ilib'

function abs() { perl -MCwd=abs_path -le "print abs_path q[$1]" }

[ -e $HOME/.rvm/scripts/rvm ] && source $HOME/.rvm/scripts/rvm
